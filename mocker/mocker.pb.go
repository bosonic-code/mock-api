// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mocker.proto

package mocker

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddHandlerRequest struct {
	RequestMatcher       *RequestMatcher  `protobuf:"bytes,1,opt,name=requestMatcher,proto3" json:"requestMatcher,omitempty"`
	Response             *MatcherResponse `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AddHandlerRequest) Reset()         { *m = AddHandlerRequest{} }
func (m *AddHandlerRequest) String() string { return proto.CompactTextString(m) }
func (*AddHandlerRequest) ProtoMessage()    {}
func (*AddHandlerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_80131499d241535a, []int{0}
}

func (m *AddHandlerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddHandlerRequest.Unmarshal(m, b)
}
func (m *AddHandlerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddHandlerRequest.Marshal(b, m, deterministic)
}
func (m *AddHandlerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddHandlerRequest.Merge(m, src)
}
func (m *AddHandlerRequest) XXX_Size() int {
	return xxx_messageInfo_AddHandlerRequest.Size(m)
}
func (m *AddHandlerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddHandlerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddHandlerRequest proto.InternalMessageInfo

func (m *AddHandlerRequest) GetRequestMatcher() *RequestMatcher {
	if m != nil {
		return m.RequestMatcher
	}
	return nil
}

func (m *AddHandlerRequest) GetResponse() *MatcherResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type AddHandlerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddHandlerResponse) Reset()         { *m = AddHandlerResponse{} }
func (m *AddHandlerResponse) String() string { return proto.CompactTextString(m) }
func (*AddHandlerResponse) ProtoMessage()    {}
func (*AddHandlerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80131499d241535a, []int{1}
}

func (m *AddHandlerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddHandlerResponse.Unmarshal(m, b)
}
func (m *AddHandlerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddHandlerResponse.Marshal(b, m, deterministic)
}
func (m *AddHandlerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddHandlerResponse.Merge(m, src)
}
func (m *AddHandlerResponse) XXX_Size() int {
	return xxx_messageInfo_AddHandlerResponse.Size(m)
}
func (m *AddHandlerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddHandlerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddHandlerResponse proto.InternalMessageInfo

type RequestMatcher struct {
	Method               string                  `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Path                 string                  `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Body                 string                  `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Query                map[string]string       `protobuf:"bytes,4,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Headers              map[string]*HeaderValue `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RequestMatcher) Reset()         { *m = RequestMatcher{} }
func (m *RequestMatcher) String() string { return proto.CompactTextString(m) }
func (*RequestMatcher) ProtoMessage()    {}
func (*RequestMatcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_80131499d241535a, []int{2}
}

func (m *RequestMatcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestMatcher.Unmarshal(m, b)
}
func (m *RequestMatcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestMatcher.Marshal(b, m, deterministic)
}
func (m *RequestMatcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestMatcher.Merge(m, src)
}
func (m *RequestMatcher) XXX_Size() int {
	return xxx_messageInfo_RequestMatcher.Size(m)
}
func (m *RequestMatcher) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestMatcher.DiscardUnknown(m)
}

var xxx_messageInfo_RequestMatcher proto.InternalMessageInfo

func (m *RequestMatcher) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *RequestMatcher) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RequestMatcher) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *RequestMatcher) GetQuery() map[string]string {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *RequestMatcher) GetHeaders() map[string]*HeaderValue {
	if m != nil {
		return m.Headers
	}
	return nil
}

type HeaderValue struct {
	Value                []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaderValue) Reset()         { *m = HeaderValue{} }
func (m *HeaderValue) String() string { return proto.CompactTextString(m) }
func (*HeaderValue) ProtoMessage()    {}
func (*HeaderValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_80131499d241535a, []int{3}
}

func (m *HeaderValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderValue.Unmarshal(m, b)
}
func (m *HeaderValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderValue.Marshal(b, m, deterministic)
}
func (m *HeaderValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderValue.Merge(m, src)
}
func (m *HeaderValue) XXX_Size() int {
	return xxx_messageInfo_HeaderValue.Size(m)
}
func (m *HeaderValue) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderValue.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderValue proto.InternalMessageInfo

func (m *HeaderValue) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type MatcherResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatcherResponse) Reset()         { *m = MatcherResponse{} }
func (m *MatcherResponse) String() string { return proto.CompactTextString(m) }
func (*MatcherResponse) ProtoMessage()    {}
func (*MatcherResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80131499d241535a, []int{4}
}

func (m *MatcherResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatcherResponse.Unmarshal(m, b)
}
func (m *MatcherResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatcherResponse.Marshal(b, m, deterministic)
}
func (m *MatcherResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatcherResponse.Merge(m, src)
}
func (m *MatcherResponse) XXX_Size() int {
	return xxx_messageInfo_MatcherResponse.Size(m)
}
func (m *MatcherResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MatcherResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MatcherResponse proto.InternalMessageInfo

func (m *MatcherResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MatcherResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*AddHandlerRequest)(nil), "mocker.AddHandlerRequest")
	proto.RegisterType((*AddHandlerResponse)(nil), "mocker.AddHandlerResponse")
	proto.RegisterType((*RequestMatcher)(nil), "mocker.RequestMatcher")
	proto.RegisterMapType((map[string]*HeaderValue)(nil), "mocker.RequestMatcher.HeadersEntry")
	proto.RegisterMapType((map[string]string)(nil), "mocker.RequestMatcher.QueryEntry")
	proto.RegisterType((*HeaderValue)(nil), "mocker.HeaderValue")
	proto.RegisterType((*MatcherResponse)(nil), "mocker.MatcherResponse")
}

func init() { proto.RegisterFile("mocker.proto", fileDescriptor_80131499d241535a) }

var fileDescriptor_80131499d241535a = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4d, 0x4f, 0xf2, 0x40,
	0x10, 0xc7, 0x9f, 0xb6, 0xb4, 0x8f, 0x4c, 0x09, 0xea, 0x4a, 0xb0, 0xf6, 0x84, 0xe5, 0x82, 0x17,
	0x0e, 0xe5, 0x20, 0x31, 0xc1, 0xc4, 0x03, 0x09, 0x17, 0x42, 0xdc, 0x83, 0xf7, 0x42, 0x27, 0x69,
	0xc2, 0x4b, 0x61, 0xbb, 0x35, 0xe9, 0x37, 0xf0, 0xfb, 0xf9, 0x85, 0xcc, 0xbe, 0x94, 0x16, 0xc4,
	0xdb, 0xcc, 0xce, 0xfc, 0x66, 0xfe, 0x33, 0x3b, 0xd0, 0xda, 0xa6, 0xab, 0x35, 0xb2, 0xe1, 0x9e,
	0xa5, 0x3c, 0x25, 0x8e, 0xf2, 0x82, 0x2f, 0x03, 0x6e, 0xdf, 0xe2, 0x78, 0x16, 0xed, 0xe2, 0x0d,
	0x32, 0x8a, 0x87, 0x1c, 0x33, 0x4e, 0x5e, 0xa1, 0xcd, 0x94, 0x39, 0x8f, 0xf8, 0x2a, 0x41, 0xe6,
	0x19, 0x3d, 0x63, 0xe0, 0x86, 0xdd, 0xa1, 0x2e, 0x42, 0x4f, 0xa2, 0xf4, 0x2c, 0x9b, 0x8c, 0xe0,
	0x8a, 0x61, 0xb6, 0x4f, 0x77, 0x19, 0x7a, 0xa6, 0x24, 0xef, 0x4b, 0xb2, 0x44, 0x74, 0x98, 0x1e,
	0x13, 0x83, 0x0e, 0x90, 0xba, 0x12, 0xfd, 0xfa, 0x6d, 0x42, 0xfb, 0xb4, 0x1b, 0xe9, 0x82, 0xb3,
	0x45, 0x9e, 0xa4, 0xb1, 0x54, 0xd5, 0xa4, 0xda, 0x23, 0x04, 0x1a, 0xfb, 0x88, 0x27, 0xb2, 0x63,
	0x93, 0x4a, 0x5b, 0xbc, 0x2d, 0xd3, 0xb8, 0xf0, 0x2c, 0xf5, 0x26, 0x6c, 0xf2, 0x0c, 0xf6, 0x21,
	0x47, 0x56, 0x78, 0x8d, 0x9e, 0x35, 0x70, 0xc3, 0xc7, 0xcb, 0x43, 0x0d, 0xdf, 0x45, 0xce, 0x74,
	0xc7, 0x59, 0x41, 0x55, 0x3e, 0x99, 0xc0, 0xff, 0x04, 0xa3, 0x18, 0x59, 0xe6, 0xd9, 0x12, 0xed,
	0xff, 0x81, 0xce, 0x54, 0x96, 0x82, 0x4b, 0xc6, 0x1f, 0x03, 0x54, 0x35, 0xc9, 0x0d, 0x58, 0x6b,
	0x2c, 0xf4, 0x08, 0xc2, 0x24, 0x1d, 0xb0, 0x3f, 0xa3, 0x4d, 0x8e, 0x7a, 0x00, 0xe5, 0xbc, 0x98,
	0x63, 0xc3, 0x5f, 0x40, 0xab, 0x5e, 0xf2, 0x02, 0xfb, 0x54, 0x67, 0xdd, 0xf0, 0xae, 0x14, 0xa6,
	0xb0, 0x0f, 0x11, 0xaa, 0x15, 0x0c, 0xfa, 0xe0, 0xd6, 0x22, 0x55, 0x67, 0xa3, 0x67, 0x1d, 0x3b,
	0x07, 0x13, 0xb8, 0x3e, 0xfb, 0x2d, 0xb1, 0xfa, 0x8c, 0x47, 0x3c, 0xcf, 0x64, 0x6f, 0x9b, 0x6a,
	0xef, 0xb8, 0x66, 0xb3, 0x5a, 0x73, 0xb8, 0x00, 0x67, 0x2e, 0x45, 0x90, 0x29, 0x40, 0xf5, 0xb3,
	0xe4, 0xa1, 0xd4, 0xf6, 0xeb, 0xee, 0x7c, 0xff, 0x52, 0x48, 0x1f, 0xc2, 0xbf, 0xa5, 0x23, 0x4f,
	0x77, 0xf4, 0x13, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x8e, 0x2e, 0x4c, 0xca, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MockerClient is the client API for Mocker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MockerClient interface {
	AddHandler(ctx context.Context, in *AddHandlerRequest, opts ...grpc.CallOption) (*AddHandlerResponse, error)
}

type mockerClient struct {
	cc *grpc.ClientConn
}

func NewMockerClient(cc *grpc.ClientConn) MockerClient {
	return &mockerClient{cc}
}

func (c *mockerClient) AddHandler(ctx context.Context, in *AddHandlerRequest, opts ...grpc.CallOption) (*AddHandlerResponse, error) {
	out := new(AddHandlerResponse)
	err := c.cc.Invoke(ctx, "/mocker.Mocker/AddHandler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MockerServer is the server API for Mocker service.
type MockerServer interface {
	AddHandler(context.Context, *AddHandlerRequest) (*AddHandlerResponse, error)
}

// UnimplementedMockerServer can be embedded to have forward compatible implementations.
type UnimplementedMockerServer struct {
}

func (*UnimplementedMockerServer) AddHandler(ctx context.Context, req *AddHandlerRequest) (*AddHandlerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddHandler not implemented")
}

func RegisterMockerServer(s *grpc.Server, srv MockerServer) {
	s.RegisterService(&_Mocker_serviceDesc, srv)
}

func _Mocker_AddHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddHandlerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockerServer).AddHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mocker.Mocker/AddHandler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockerServer).AddHandler(ctx, req.(*AddHandlerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mocker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mocker.Mocker",
	HandlerType: (*MockerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddHandler",
			Handler:    _Mocker_AddHandler_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mocker.proto",
}
